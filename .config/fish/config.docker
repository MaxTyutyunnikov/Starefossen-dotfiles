#!/bin/fish

# Aspell
function aspell -d "Run aspell spell checking on a file"
  if test -z $argv[1]
    echo 'Usage: aspell [file]'
  else
    set file $argv[1]
    set abs (echo $file | awk '{print substr($1, 0, length(1))}')
    set mnt /usr/src/app

    if test $abs = '/'
      echo 'Only relative files are allowed!'
      echo 'Usage: aspell [file]'
      return 1
    end

    docker run --rm -it \
      -v $HOME/.aspell:/etc/aspell \
      -v (pwd):$mnt\
      starefossen/aspell \
        aspell check \
          --dont-backup \
          --encoding=utf-8 \
          --home-dir /etc/aspell \
          $mnt/$file
  end
end

function ansible -d "Run ansible command"
  set mnt /usr/src/app
  set cmd ansible

  docker run -it --rm \
    -v (pwd):$mnt \
    -v $HOME/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
    #-v $HOME/.ssh/prometheus-workshop:/root/.ssh/prometheus-workshop:ro \
    #-v $HOME/.ssh/config:/root/.ssh/config \
    -w /$mnt \
    williamyeh/ansible:debian9 $cmd $argv
end

function ansible-playbook -d "Run ansible-playbook command"
  set mnt /usr/src/app
  set cmd ansible-playbook

  docker run -it --rm \
    -v (pwd):$mnt \
    -v $HOME/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
    #-v $HOME/.ssh/prometheus-workshop:/root/.ssh/prometheus-workshop:ro \
    #-v $HOME/.ssh/config:/root/.ssh/config \
    -w /$mnt \
    williamyeh/ansible:debian9 $cmd $argv
end

function ansible-playbook-ssh -d "Run ansible-playbook with SSH"
  set mnt /usr/src/app
  set cmd ansible-playbook
  set key /root/.ssh-keys/id_rsa

  docker run -it --rm \
    -v (pwd):$mnt \
    -v $HOME/.ssh/id_rsa:$key:ro \
    -w /$mnt \
    williamyeh/ansible:debian9 \
      bash -c "eval \"\$(ssh-agent -s)\" && ssh-add $key && $cmd $argv"
end

function ansible-lint -d "Run ansible-lint command"
  set mnt /usr/src/app
  #set cmd ansible-lint

  docker run -it --rm \
    -v (pwd):$mnt \
    -w /$mnt \
    yokogawa/ansible-lint:latest \
			sh -c 'find . -name "*.y*ml" | xargs -r ansible-lint --force-color'
end

function yaml-lint -d "Run yaml-lint command"
  set mnt /usr/src/app
  set cmd yamllint

  docker run -it --rm \
    -v (pwd):$mnt \
    -w /$mnt \
    sdesbure/yamllint:latest $cmd .
end

function tf -d "Run terraform command"
  set mnt /root/terraform
  set cmd terraform

  docker run -it --rm \
    -v (pwd):$mnt \
    -v ~/.helm:/root/.helm \
    -v ~/.kube:/root/.kube \
    -w /$mnt \
    -e "GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS" \
    hashicorp/terraform:light $argv
end

function aws -d "Run AWS CLI"
  set mnt /usr/src/app
  set cmd aws
  set img mesosphere/aws-cli:latest

  set configDir ~/.aws
  set configMnt /root/.aws

  if test -d (pwd)/.aws
    set configDir (pwd)/.aws
  end

  #set -q AWS_DEFAULT_REGION[1]; or set AWS_DEFAULT_REGION eu-west-1

  docker run -it --rm \
    -v $configDir:$configMnt \
    -v (pwd):$mnt \
    -w /$mnt \
    #-e "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" \
    #-e "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" \
    #-e "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" \
    $img $argv
end

function groovylint -d "Run Groovy Linter"
  set mnt /usr/src/app

  docker run --rm \
   -v (pwd):$mnt \
   -w $mnt \
   -u root \
   abletonag/groovylint:latest \
     python3 /opt/run_codenarc.py \
      -report=console \
      -includes="**/*.groovy"
end

alias highlight="docker run -i --rm starefossen/highlight"
alias az="docker run -it --rm -v $HOME:/root azuresdk/azure-cli-python:latest az"
